From 5d5eef59a48e3b8e0f67c2ab0963d380c7a7399d Mon Sep 17 00:00:00 2001
From: Vladimir Barinov <vladimir.barinov@cogentembedded.com>
Date: Mon, 2 May 2016 22:05:53 +0300
Subject: [PATCH] can: rcar_can: add enable and standby control pins

Add enable and standby can transceiver control pins

Signed-off-by: Vladimir Barinov <vladimir.barinov@cogentembedded.com>
---
 .../devicetree/bindings/net/can/rcar_can.txt       |  4 +++
 drivers/net/can/rcar_can.c                         | 33 +++++++++++++++++++++-
 include/linux/can/platform/rcar_can.h              |  2 ++
 3 files changed, 38 insertions(+), 1 deletion(-)

diff --git a/Documentation/devicetree/bindings/net/can/rcar_can.txt b/Documentation/devicetree/bindings/net/can/rcar_can.txt
index 002d844..9e2335a 100644
--- a/Documentation/devicetree/bindings/net/can/rcar_can.txt
+++ b/Documentation/devicetree/bindings/net/can/rcar_can.txt
@@ -18,6 +18,7 @@ Optional properties:
 			    <0x0> (default) : Peripheral clock (clkp1)
 			    <0x1> : Peripheral clock (clkp2)
 			    <0x3> : Externally input clock
+- gpios: GPIO used for controlling the enable pin and standby pin
 
 Example
 -------
@@ -39,5 +40,8 @@ Board specific .dts file:
 &can0 {
 	pinctrl-0 = <&can0_pins>;
 	pinctrl-names = "default";
+	gpios = <&gpio5 29 GPIO_ACTIVE_HIGH /* enable */
+		 &gpio5 30 GPIO_ACTIVE_LOW /* standby */
+		>;
 	status = "okay";
 };
diff --git a/drivers/net/can/rcar_can.c b/drivers/net/can/rcar_can.c
index 1abe133..08f400e 100644
--- a/drivers/net/can/rcar_can.c
+++ b/drivers/net/can/rcar_can.c
@@ -21,6 +21,7 @@
 #include <linux/clk.h>
 #include <linux/can/platform/rcar_can.h>
 #include <linux/of.h>
+#include <linux/of_gpio.h>
 
 #define RCAR_CAN_DRV_NAME	"rcar_can"
 
@@ -740,12 +741,16 @@ static int rcar_can_probe(struct platform_device *pdev)
 	struct resource *mem;
 	void __iomem *addr;
 	u32 clock_select = CLKR_CLKP1;
-	int err = -ENODEV;
+	int err = -ENODEV, ret;
 	int irq;
+	unsigned int enable_pin, standby_pin;
+	enum of_gpio_flags enable_flags, standby_flags;
 
 	if (pdev->dev.of_node) {
 		of_property_read_u32(pdev->dev.of_node,
 				     "renesas,can-clock-select", &clock_select);
+		enable_pin = of_get_gpio_flags(pdev->dev.of_node, 0, &enable_flags);
+		standby_pin = of_get_gpio_flags(pdev->dev.of_node, 1, &standby_flags);
 	} else {
 		pdata = dev_get_platdata(&pdev->dev);
 		if (!pdata) {
@@ -753,6 +758,32 @@ static int rcar_can_probe(struct platform_device *pdev)
 			goto fail;
 		}
 		clock_select = pdata->clock_select;
+		enable_pin = pdata->enable_pin;
+		standby_pin = pdata->standby_pin;
+	}
+
+	if (gpio_is_valid(enable_pin)) {
+		ret = devm_gpio_request(&pdev->dev, enable_pin, "enable");
+		if (!ret) {
+			if (enable_flags & OF_GPIO_ACTIVE_LOW)
+				gpio_set_value(enable_pin, 0);
+			else
+				gpio_set_value(enable_pin, 1);
+		} else {
+			dev_info(&pdev->dev, "Failed to request enable pin\n");
+		}
+	}
+
+	if (gpio_is_valid(standby_pin)) {
+		ret = devm_gpio_request(&pdev->dev, standby_pin, "standby");
+		if (!ret) {
+			if (standby_flags & OF_GPIO_ACTIVE_LOW)
+				gpio_set_value(standby_pin, 1);
+			else
+				gpio_set_value(standby_pin, 0);
+		} else {
+			dev_info(&pdev->dev, "Failed to request standby pin\n");
+		}
 	}
 
 	irq = platform_get_irq(pdev, 0);
diff --git a/include/linux/can/platform/rcar_can.h b/include/linux/can/platform/rcar_can.h
index 0f4a2f3..7ef810d 100644
--- a/include/linux/can/platform/rcar_can.h
+++ b/include/linux/can/platform/rcar_can.h
@@ -12,6 +12,8 @@ enum CLKR {
 
 struct rcar_can_platform_data {
 	enum CLKR clock_select;	/* Clock source select */
+	unsigned int enable_pin;
+	unsigned int standby_pin;
 };
 
 #endif	/* !_CAN_PLATFORM_RCAR_CAN_H_ */
-- 
1.9.1

