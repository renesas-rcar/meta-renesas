From f6e84611707d3ca7ec4717d792a7ae22c7a54eff Mon Sep 17 00:00:00 2001
From: Vladimir Barinov <vladimir.barinov@cogentembedded.com>
Date: Thu, 13 Oct 2016 18:32:40 +0300
Subject: [PATCH 1/5] Revert "mmc: sh_mobile_sdhi: Add eMMC HS400 mode support"

This reverts commit 628db562b7ad6574b7c2bfa01ee2c89484783924.
---
 drivers/mmc/host/sh_mobile_sdhi.c | 43 ++-------------------------------------
 1 file changed, 2 insertions(+), 41 deletions(-)

diff --git a/drivers/mmc/host/sh_mobile_sdhi.c b/drivers/mmc/host/sh_mobile_sdhi.c
index c707dbc..aeba98a 100644
--- a/drivers/mmc/host/sh_mobile_sdhi.c
+++ b/drivers/mmc/host/sh_mobile_sdhi.c
@@ -392,7 +392,6 @@ static int sh_mobile_sdhi_card_busy(struct tmio_mmc_host *host)
 #define SH_MOBILE_SDHI_SCC_CKSEL	0x006
 #define SH_MOBILE_SDHI_SCC_RVSCNTL	0x008
 #define SH_MOBILE_SDHI_SCC_RVSREQ	0x00A
-#define SH_MOBILE_SDHI_SCC_TMPPORT2	0x00E
 
 /* Definitions for values the SH_MOBILE_SDHI_SCC_DTCNTL register */
 #define SH_MOBILE_SDHI_SCC_DTCNTL_TAPEN		(1 << 0)
@@ -402,10 +401,6 @@ static int sh_mobile_sdhi_card_busy(struct tmio_mmc_host *host)
 #define SH_MOBILE_SDHI_SCC_RVSCNTL_RVSEN	(1 << 0)
 /* Definitions for values the SH_MOBILE_SDHI_SCC_RVSREQ register */
 #define SH_MOBILE_SDHI_SCC_RVSREQ_RVSERR	(1 << 2)
-/* Definitions for values the SH_MOBILE_SDHI_SCC_TMPPORT2 register */
-#define SH_MOBILE_SDHI_SCC_TMPPORT2_HS400EN	(1 << 31)
-/* Definitions for values the SH_MOBILE_SDHI_SCC_TMPPORT2 register */
-#define SH_MOBILE_SDHI_SCC_TMPPORT2_HS400OSEL	(1 << 4)
 
 static inline u32 sd_scc_read32(struct tmio_mmc_host *host, int addr)
 {
@@ -484,23 +479,6 @@ static int sh_mobile_sdhi_prepare_tuning(struct tmio_mmc_host *host,
 	return 0;
 }
 
-static void sh_mobile_sdhi_prepare_hs400_tuning(struct tmio_mmc_host *host)
-{
-	sd_ctrl_write16(host, CTL_SD_CARD_CLK_CTL, ~0x0100 &
-		sd_ctrl_read16(host, CTL_SD_CARD_CLK_CTL));
-
-	/* Set HS400 mode */
-	sd_ctrl_write16(host, CTL_SDIF_MODE, 0x0001 |
-		sd_ctrl_read16(host, CTL_SDIF_MODE));
-	sd_scc_write32(host, SH_MOBILE_SDHI_SCC_TMPPORT2,
-		(SH_MOBILE_SDHI_SCC_TMPPORT2_HS400EN |
-		SH_MOBILE_SDHI_SCC_TMPPORT2_HS400OSEL) |
-		sd_scc_read32(host, SH_MOBILE_SDHI_SCC_TMPPORT2));
-
-	sd_ctrl_write16(host, CTL_SD_CARD_CLK_CTL, 0x0100 |
-		sd_ctrl_read16(host, CTL_SD_CARD_CLK_CTL));
-}
-
 #define SH_MOBILE_SDHI_MAX_TAP	3
 static int sh_mobile_sdhi_select_tuning(struct tmio_mmc_host *host,
 							unsigned long *tap)
@@ -586,14 +564,6 @@ static void sh_mobile_sdhi_hw_reset(struct tmio_mmc_host *host)
 			~SH_MOBILE_SDHI_SCC_CKSEL_DTSEL &
 			sd_scc_read32(host, SH_MOBILE_SDHI_SCC_CKSEL));
 
-		/* Reset HS400 mode */
-		sd_ctrl_write16(host, CTL_SDIF_MODE, ~0x0001 &
-			sd_ctrl_read16(host, CTL_SDIF_MODE));
-		sd_scc_write32(host, SH_MOBILE_SDHI_SCC_TMPPORT2,
-			~(SH_MOBILE_SDHI_SCC_TMPPORT2_HS400EN |
-			SH_MOBILE_SDHI_SCC_TMPPORT2_HS400OSEL) &
-			sd_scc_read32(host, SH_MOBILE_SDHI_SCC_TMPPORT2));
-
 		sd_ctrl_write16(host, CTL_SD_CARD_CLK_CTL, 0x0100 |
 			sd_ctrl_read16(host, CTL_SD_CARD_CLK_CTL));
 
@@ -765,16 +735,8 @@ static int sh_mobile_sdhi_probe(struct platform_device *pdev)
 		mmc_data->capabilities |= MMC_CAP_UHS_SDR50;
 	if (of_find_property(np, "sd-uhs-sdr104", NULL))
 		mmc_data->capabilities |= MMC_CAP_UHS_SDR104;
-	if (of_find_property(np, "mmc-hs200-1_8v", NULL))
-		mmc_data->capabilities2 |= MMC_CAP2_HS200_1_8V_SDR;
-	if (of_find_property(np, "mmc-hs400-1_8v", NULL))
-		mmc_data->capabilities2 |= MMC_CAP2_HS400_1_8V |
-					   MMC_CAP2_HS200_1_8V_SDR;
-
-	if ((mmc_data->capabilities & MMC_CAP_UHS_SDR104) ||
-	    (mmc_data->capabilities2 & MMC_CAP2_HS200_1_8V_SDR) ||
-	    (mmc_data->capabilities2 & (MMC_CAP2_HS400_1_8V |
-					MMC_CAP2_HS200_1_8V_SDR))) {
+
+	if (mmc_data->capabilities & MMC_CAP_UHS_SDR104) {
 		mmc_data->capabilities |= MMC_CAP_HW_RESET;
 		mmc_data->flags |= TMIO_MMC_HAS_UHS_SCC;
 	}
@@ -796,7 +758,6 @@ static int sh_mobile_sdhi_probe(struct platform_device *pdev)
 	host->retuning = sh_mobile_sdhi_retuning;
 	host->hw_reset = sh_mobile_sdhi_hw_reset;
 	host->scc_tapnum = tapnum;
-	host->prepare_hs400_tuning = sh_mobile_sdhi_prepare_hs400_tuning;
 
 	/* Orginally registers were 16 bit apart, could be 32 or 64 nowadays */
 	if (resource_size(res) > 0x400)
-- 
1.9.1

