From 47605a393842f045ec56c1525271bc65d67a81f0 Mon Sep 17 00:00:00 2001
From: Masaru Nagai <masaru.nagai.vx@renesas.com>
Date: Tue, 8 Apr 2014 10:48:47 +0900
Subject: [PATCH 2/2] sk: replaced the priority of hwtstamp filter1 and filter2

The behavior of the sk_timestamping_init is following steps.

1. try settings of the filter1 as the most general HWTSTAMP filter.
2. If the result of the step1 is error, try settings of the filter2
as the HWTSTAMP filter for the each layer.

But, the expected behavior is reverse. this patch fixes this problem.

Signed-off-by: Mitsuhiro Kimura <mitsuhiro.kimura.kc@renesas.com>
Signed-off-by: Masaru Nagai <masaru.nagai.vx@renesas.com>
---
 sk.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/sk.c b/sk.c
index 5265988..f82bb94 100644
--- a/sk.c
+++ b/sk.c
@@ -312,15 +312,15 @@ int sk_timestamping_init(int fd, const char *device, enum timestamp_type type,
 	}
 
 	if (type != TS_SOFTWARE) {
-		filter1 = HWTSTAMP_FILTER_PTP_V2_EVENT;
+		filter2 = HWTSTAMP_FILTER_PTP_V2_EVENT;
 		one_step = type == TS_ONESTEP ? 1 : 0;
 		switch (transport) {
 		case TRANS_UDP_IPV4:
 		case TRANS_UDP_IPV6:
-			filter2 = HWTSTAMP_FILTER_PTP_V2_L4_EVENT;
+			filter1 = HWTSTAMP_FILTER_PTP_V2_L4_EVENT;
 			break;
 		case TRANS_IEEE_802_3:
-			filter2 = HWTSTAMP_FILTER_PTP_V2_L2_EVENT;
+			filter1 = HWTSTAMP_FILTER_PTP_V2_L2_EVENT;
 			break;
 		case TRANS_DEVICENET:
 		case TRANS_CONTROLNET:
@@ -330,10 +330,10 @@ int sk_timestamping_init(int fd, const char *device, enum timestamp_type type,
 		}
 		err = hwts_init(fd, device, filter1, one_step);
 		if (err) {
-			pr_info("driver rejected most general HWTSTAMP filter");
+			pr_err("ioctl SIOCSHWTSTAMP failed: %m");
 			err = hwts_init(fd, device, filter2, one_step);
 			if (err) {
-				pr_err("ioctl SIOCSHWTSTAMP failed: %m");
+				pr_info("driver rejected most general HWTSTAMP filter");
 				return err;
 			}
 		}
-- 
1.8.3.2

